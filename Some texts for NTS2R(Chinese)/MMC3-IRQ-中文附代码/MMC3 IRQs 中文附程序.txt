MMC3 IRQs
by Allan Blomquist   维京猎人 译

    iNES mapper 4 (MMC3)提供了一个方便的方式来令帧内改变PPU实现“特殊效果”像在NES游戏中的分屏显示滚动。而不是使用0号精灵的命中去计时让你写PPU硬件，使用IRQ就可以令CPU有效的通过帧工作，而不是浪费时间获取0号精灵的命中标志。

这4个寄存器，是MMC3为IRQ触发而设的：

$C000 - IRQ 计数器 - 这个Mapper用倒数来触发IRQ。每一次扫描线，值递减一，当它到达0，IRQ就触发。
        注：背景和精灵必须启用，在$2001(3和4位)，目的是为了倒数发生。

$C001 - IRQ 计数锁存器 - 写入你想要的值，即您用来倒数的值，而不是直接使用的IRQ计数寄存器。

$E000 - IRQ 禁用/应答 - 在这里写任意值，禁止IRQ的触发，但也能将IRQ计数器锁存器中的值复制到实际的IRQ计数器。它也应答一个IRQ，一旦它发生了。

$E001 - IRQ 使能 - 在这里写入任意值，就可以启用IRQ发生器。

所以，这就是大多数的商业游戏使用这些寄存器（如下）：

  当你想设置的IRQ：（在您的NMI/VBLANK例程中）
   1。写$E000应答任何目前待定的中断
   2。写扫描线数，你要(写到)$C000和$C001
   3。写$E000再次锁定倒数值
   4。写$E001启用IRQ计数器

  一旦你的IRQ发生了：（在您的IRQ例程中）
   1。写$E000应答IRQ和禁用IRQ计数器

    你在游戏中使用MMC3的IRQ之前，有几件事情你必须设置。首先，你要设置IRQ矢量，即ROM结尾的指针代码，当IRQ发生时使其能够被调用。IRQ矢量位置在$FFFE，在NMI矢量和RESET矢量的右边。当一个IRQ触发时，CPU跳转到的16位的地址$FFFE，而且CPU标志被保存，当IRQ例程返回时自动恢复。但是CPU的寄存器不保存，所以你必须确保它们还原，您的IRQ例程结束时（开始时应堆栈A，X，Y，结束时应出栈Y，X，A）。

    第二件事情你必须做的，使用MMC3的IRQ阻止其他（过程）在NES上产生IRQ中断。NES有一个“帧计数器”，每帧结束时默认情况下产生的IRQ，很像NMI。如果这不禁用，你的IRQ代码将被调用比你要的更多，这将搞砸你的游戏。要禁用帧计数器的IRQ，只要在你的程序开始时写$40到$4017。

    最后，能够使用IRQ，你一定要告诉NES的CPU实际承认他们，而不是忽略他们，因为它默认情况下（这就是为什么你不必担心帧计数器的IRQ，在简单的游戏 - CPU实际上忽略它们）要启用的IRQ，你必须用“CLI”指令清除CPU中的中断禁止标志。在某些时候如果你想重新禁用它们，就用“SEI”。


下面是一个汇编的例子(上下两半红绿颜色)

	.inesprg 1	; 1 PRG bank
	.ineschr 0	; 0 CHR bank
	.inesmir 0	; 镜像类型 0
	.inesmap 4	; mapper 4 (MMC3)
	.org $C000
	.bank 0

start:
	jsr vwait
	lda #$80
	sta $2000	; 开NMI中断（外部）发生器。
	lda #$8
	sta $2001	; 开背景显示，使MMC3能够计数
	lda #$40
	sta $4017	; 禁用帧计数IRQ
	cli		; 启动IRQ过程

gameloop:
	jmp gameloop
			;  NMI 例程
nmi:
	lda #$3F	; -\
	sta $2006	;   > 设背景色为红色
	lda #0		;  |
	sta $2006	;  |
	lda #$6		;  |
	sta $2007	; -/
	lda #1
	sta $E000
	lda #$78	; $78=120
	sta $C000	; 设置 MMC3 发生器
	lda #$78
	sta $C001	; 120 扫描线
	lda #1
	sta $E000
	lda #1
	sta $E001
	lda #0
	sta $2006
	lda #0
	sta $2006
	lda #$8
	sta $2001	; 开背景显示，使MMC3能够计数
	rti
			; IRQ 例程
irq:

	pha
	txa
	pha		; 保存A,X and Y.  你必须这样做，是因为
	tya		; IRQ 中断了你的主代码进程，会改变你寄存器。
	pha		; 
			; 那就坏事了...
	lda #0
	sta $2001	; 背景强制关闭，叫愚蠢的仿真器，能够实现我改变背景色
	lda #$3F	; -\
	sta $2006	;  |
	lda #0		;  |
	sta $2006	;   > 设背景色为绿色
	lda #$0A	;  |
	sta $2007	; -/
	lda #1
	sta $E000	; 应答IRQ，并禁止进一步的IRQ（外部）发生器
	lda #0
	sta $2006
	lda #0
	sta $2006

	pla
	tay		; 还原你的寄存器
	pla
	tax
	pla
	rti
			; 等到屏幕刷新
vwait:
	lda $2002
	bpl vwait	; 等到刷新开始
vwait_1:
	lda $2002
	bmi vwait_1	; 等到刷新结束
	rts
			; 文件尾部
			; 跳转表 NMI, Reset, IRQ 开端指针
	.bank 1
	.org $fffa
	.dw nmi, start, irq


